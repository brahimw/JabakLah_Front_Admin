{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/_services/auth.service\";\nimport * as i3 from \"src/app/_services/token-storage.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction AdminLoginFormComponent_div_10_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Le champ Login est requis \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginFormComponent_div_10_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Format non valide pour le login Ex:JK150J89B5G123 \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginFormComponent_div_10_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Le champ Login a une longueur minimale de 10 \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginFormComponent_div_10_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Le champ mot de passe est requis \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginFormComponent_div_10_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Le mot de passe doit contenir un minimum de 8 caract\\u00E8res et chiffres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminLoginFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"ul\", 22);\n    i0.ɵɵtemplate(2, AdminLoginFormComponent_div_10_li_2_Template, 2, 0, \"li\", 23);\n    i0.ɵɵtemplate(3, AdminLoginFormComponent_div_10_li_3_Template, 2, 0, \"li\", 23);\n    i0.ɵɵtemplate(4, AdminLoginFormComponent_div_10_li_4_Template, 2, 0, \"li\", 23);\n    i0.ɵɵtemplate(5, AdminLoginFormComponent_div_10_li_5_Template, 2, 0, \"li\", 23);\n    i0.ɵɵtemplate(6, AdminLoginFormComponent_div_10_li_6_Template, 2, 0, \"li\", 23);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(16);\n\n    const _r3 = i0.ɵɵreference(21);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors.pattern);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.minlength);\n  }\n}\n\nfunction AdminLoginFormComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Echec de connexion : \", ctx_r4.errorMessage, \" \");\n  }\n}\n\nexport let AdminLoginFormComponent = /*#__PURE__*/(() => {\n  class AdminLoginFormComponent {\n    constructor(router, authService, tokenStorage) {\n      this.router = router;\n      this.authService = authService;\n      this.tokenStorage = tokenStorage;\n      this.admin = {\n        logIn: \"\",\n        password: \"\"\n      };\n      this.isLoggedIn = false;\n      this.isLoginFailed = false;\n      this.errorMessage = '';\n      this.roles = [];\n    }\n\n    ngOnInit() {\n      if (this.tokenStorage.getToken() != null) {\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAdmin().roles;\n        this.router.navigate(['admin/home']);\n      }\n    }\n\n    submitAdminLogInForm(form) {\n      console.log(form);\n      const {\n        logIn,\n        password\n      } = this.admin;\n      this.authService.login(logIn, password).subscribe({\n        next: data => {\n          console.log(data);\n          this.tokenStorage.saveToken(data.accessToken);\n          this.tokenStorage.saveAdmin(data);\n          this.isLoginFailed = false;\n          this.isLoggedIn = true;\n          this.roles = this.tokenStorage.getAdmin().roles;\n          this.router.navigate(['/admin/home']);\n          /* this.reloadPage();*/\n        },\n        error: err => {\n          this.errorMessage = err.error.message;\n          this.isLoginFailed = true;\n        }\n      });\n    }\n\n    reloadPage() {\n      window.location.reload();\n    }\n\n  }\n\n  AdminLoginFormComponent.ɵfac = function AdminLoginFormComponent_Factory(t) {\n    return new (t || AdminLoginFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.TokenStorageService));\n  };\n\n  AdminLoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminLoginFormComponent,\n    selectors: [[\"admin-login-form\"]],\n    decls: 28,\n    vars: 5,\n    consts: [[1, \"background-radial-gradient\", \"overflow-hidden\"], [1, \"container\", \"px-4\", \"py-5\", \"px-md-5\", \"text-center\", \"text-lg-start\", \"my-xxl-5\", \"d-flex\", \"justify-content-center\"], [\"logFormContainer\", \"\", 1, \"card\", \"login-form\", \"px-4\", \"bg-opacity-25\", \"bg-light\", \"rounded-4\"], [1, \"card-body\", \"p-4\"], [1, \"p-4\", \"pb-1\", \"text-center\", \"fs-1\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"bi\", \"bi-person-gear\", \"rounded-circle\", \"bg-light\", \"bg-opacity-25\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"p-2\", 2, \"width\", \"100px\", \"height\", \"100px\"], [1, \"mb-2\", \"text-white\", \"text-center\"], [\"class\", \"alert alert-danger bg-opacity-25 text-wrap\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"row\"], [1, \"form-floating\", \"mb-4\", \"bg-opacity-25\"], [\"name\", \"login\", \"type\", \"text\", \"id\", \"login\", \"placeholder\", \"Login\", \"required\", \"\", \"minlength\", \"5\", \"maxlength\", \"24\", \"pattern\", \"[A-Z1-9a-z]+\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"LogIn\", \"ngModel\"], [\"for\", \"login\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"mot de passe\", \"required\", \"\", \"is\", \"\", \"minlength\", \"5\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"Password\", \"ngModel\"], [\"for\", \"password\", 1, \"form-label\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", \"id\", \"btnLogin\", 1, \"btn\", \"btn-light\", 3, \"disabled\"], [\"class\", \"alert alert-danger my-1\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"bg-opacity-25\", \"text-wrap\"], [1, \"m-0\", \"p-0\", \"px-2\", \"small\", \"fw-light\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"my-1\"]],\n    template: function AdminLoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"h3\");\n        i0.ɵɵtext(8, \"Connexion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AdminLoginFormComponent_div_10_Template, 7, 5, \"div\", 7);\n        i0.ɵɵelementStart(11, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function AdminLoginFormComponent_Template_form_ngSubmit_11_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r1 = i0.ɵɵreference(12);\n\n          return ctx.submitAdminLogInForm(_r1);\n        });\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11)(15, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminLoginFormComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.admin.logIn = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\", 14);\n        i0.ɵɵtext(18, \" Login \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 11)(20, \"input\", 15, 16);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminLoginFormComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.admin.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"label\", 17);\n        i0.ɵɵtext(23, \" Mot de passe \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 18)(25, \"button\", 19);\n        i0.ɵɵtext(26, \" Se connecter \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(27, AdminLoginFormComponent_div_27_Template, 2, 1, \"div\", 20);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(16);\n\n        const _r3 = i0.ɵɵreference(21);\n\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", _r2.touched && !_r2.valid || _r3.touched && !_r3.valid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.admin.logIn);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.admin.password);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !(_r2.valid && _r3.valid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoginFailed);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.PatternValidator, i5.NgControlStatus, i5.NgModel],\n    styles: [\".login-form[_ngcontent-%COMP%]{max-width:600px}\"]\n  });\n  return AdminLoginFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}